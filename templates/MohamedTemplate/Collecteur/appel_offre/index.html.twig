{% extends './FrontTemplate.html.twig' %}

{% block title %}Liste d'Appels d'offres{% endblock %}

{% block body %}


    <br>
    <br>

    <div class="card2">
        <div class="form-group text-center">
            <h1>Table d'Appels d'Offre</h1>
        </div>
        <div class="form-group text-center">
        <div class="container mt-4">
            <h4>Légende des couleurs</h4>
            <div class="row">
                <div class="col-md-6">
                    <div class="legend-item">
                        <div class="color-indicator bg-warning"></div>
                        <div class="legend-text">En cours</div>
                    </div>
                    <div class="legend-item">
                        <div class="color-indicator bg-success"></div>
                        <div class="legend-text">Terminer avec succes</div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="legend-item">
                        <div class="color-indicator bg-info"></div>

                        <div class="legend-text">Clôturé et Paiement En cours</div>
                    </div>
                    <div class="legend-item">
                        <div class="color-indicator bg-danger"></div>
                        <div class="legend-text">Appel offre echoue</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mx-2">
            <div class="col-md-6">
                <form action="{{ path('app_appeloffre_index') }}" method="get" class="mb-3" id="searchForm">
                    <div class="form-group d-inline-block mr-2">
                        <input type="text" class="form-control" name="search" id="searchInput"
                               placeholder="Rechercher..." value="{{ searchTerm }}"
                               style="width: 200px; font-size: 14px;">
                    </div>
                </form>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-sm-12">
                        <label for="minPrice">Min Price:</label>
                        <input type="range" id="minPrice" name="minPrice" min="{{ minPrice }}" max="{{ maxPrice }}"
                               value="{{ minPrice }}" step="1">
                        <span id="minPriceValue">{{ minPrice }}</span>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-sm-12">
                        <label for="maxPrice">Max Price:</label>
                        <input type="range" id="maxPrice" name="maxPrice" min="{{ minPrice }}" max="{{ maxPrice }}"
                               value="{{ maxPrice }}" step="1">
                        <span id="maxPriceValue">{{ maxPrice }}</span>
                    </div>
                </div>
            </div>
        </div>
        </div>
        <div class="container-fluid bg-trasparent my-4 p-3" style="position: relative;">
            <div class="row row-cols-1 row-cols-xs-2 row-cols-sm-2 row-cols-lg-4 g-3">
                {% for appelsoffre in appelsoffres %}
                    {% set cardColor = '' %}
                    {% if appelsoffre.etat == 'En cours' %}
                        {% set cardColor = 'bg-warning' %}
                    {% elseif appelsoffre.etat == 'Cloturer' and appelsoffre.etatPayment == 'paye' %}
                        {% set cardColor = 'bg-success' %}
                    {% elseif appelsoffre.etat == 'Cloturer' and appelsoffre.etatPayment == 'En cours' %}
                        {% set cardColor = 'bg-info' %}
                    {% elseif appelsoffre.etat == 'Echouee' and appelsoffre.etatPayment == null %}
                        {% set cardColor = 'bg-danger' %}
                    {% endif %}
                    <div class="col">
                        <div class="card h-100 shadow-sm {{ cardColor }}">

                            <div class="card-body">
                                <div class="clearfix">
                                    <h3>Titre :{{ appelsoffre.titre }} </h3>
                                    <p class="float-end price">{{ appelsoffre.prixinitial }} TND</p> <!-- Ajouter la balise <p> pour afficher le montant -->
                                </div>
                                <h6>Date début : {{ appelsoffre.dateDebut ? appelsoffre.dateDebut|date('Y-m-d H:i') : '' }}</h6>
                                    <h6>Date fin : {{ appelsoffre.dateFin ? appelsoffre.dateFin|date('Y-m-d H:i') : '' }} </h6>
                                    <h6>Description :{{ appelsoffre.description }}  </h6>
                                    <h6>État : {{ appelsoffre.etat }}</h6>
                                    <h6> État de paiement : {{ appelsoffre.etatPayment }}</h6>
                                {% if cardColor == 'bg-warning' %}
                                    <div class="row justify-content-center">
                                        <div class="col-md-4">
                                            <a href="{{ path('app_appeloffre_edit', {'id': appelsoffre.id}) }}" title="Modifier">
                                                <img src="/mohamed_Css/img/edit.png" style="width: 40px; height: 35px;">
                                            </a>
                                        </div>
                                        <div class="col-md-4">
                                            <a href="{{ path('app_appeloffre_show', {'id': appelsoffre.id}) }}" title="Info">
                                                <img src="/mohamed_Css/img/information.png" style="width: 40px; height: 35px;">
                                            </a>
                                        </div>
                                        <div class="col-md-4">
                                            <a href="#"  onclick="confirmDeleting(event, '{{ path('app_appeloffre_delete', {'id': appelsoffre.id}) }}', '{{ csrf_token('delete' ~ appelsoffre.id) }}')" title="Delete">
                                                <img src="/mohamed_Css/img/bin.png" style="width: 40px; height: 35px;" alt="Delete">
                                            </a>
                                        </div>
                                    </div>
                                {% elseif cardColor == 'bg-success' %}
                                    <div class="row justify-content-center">
                                        <div class="col-md-4">
                                            <a href="{{ path('app_appeloffre_show', {'id': appelsoffre.id}) }}" title="Info">
                                                <img src="/mohamed_Css/img/information.png" style="width: 40px; height: 35px;">
                                            </a>
                                        </div>
                                    </div>
                                {% elseif cardColor == 'bg-info' %}
                                    <div class="row justify-content-center">
                                        <div class="col-md-4">
                                            <a href="{{ path('app_appeloffre_valide', {'id': appelsoffre.id}) }}" title="Valider">
                                                <img src="/mohamed_Css/img/valide.png" style="width: 40px; height: 35px;">
                                            </a>
                                        </div>
                                        <div class="col-md-4">
                                            <a href="{{ path('app_appeloffre_show', {'id': appelsoffre.id}) }}" title="Info">
                                                <img src="/mohamed_Css/img/information.png" style="width: 40px; height: 35px;">
                                            </a>
                                        </div>
                                    </div>
                                {% else %}
                                    <div class="row justify-content-center">
                                        <div class="text-center">
                                            <a href="{{ path('app_appeloffre_show', {'id': appelsoffre.id}) }}" title="Info">
                                                <img src="/mohamed_Css/img/information.png" style="width: 40px; height: 35px;">
                                            </a>
                                        </div>
                                    </div>
                                {% endif %}

                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>

        <div class="form-group text-center">
            <form action="{{ path('app_appeloffre_new') }}" method="GET">
                <button type="submit" class="btn btn-success btn-custom">Create new</button>
            </form>
        </div>
        <br>
        <br>
    </div>


    <style>
        @import url('https://fonts.googleapis.com/css2?family=Fira+Sans+Extra+Condensed:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Heebo:wght@100;200;300;400;500;600;700;800;900&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

        :root {
            --font1: 'Heebo', sans-serif;
            --font2: 'Fira Sans Extra Condensed', sans-serif;
            --font3: 'Roboto', sans-serif;
        }


        h2 {
            font-weight: 900;
        }


        .card {
            background: #fff;
            box-shadow: 0 6px 10px rgba(0, 0, 0, .08), 0 0 6px rgba(0, 0, 0, .05);
            transition: .3s transform cubic-bezier(.155, 1.105, .295, 1.12), .3s box-shadow, .3s -webkit-transform cubic-bezier(.155, 1.105, .295, 1.12);
            border: 0;
            border-radius: 1rem;
            width: 300px;
        }
        .card h5 {
            overflow: hidden;
            height: 56px;
            font-weight: 900;
            font-size: 1rem;
        }

        .card h2 {
            font-size: 1rem;
        }

        .card:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 20px rgba(0, 0, 0, .12), 0 4px 8px rgba(0, 0, 0, .06);
        }

        .top-right span {
            display: inline-block;
            vertical-align: middle;
        }

        @media (max-width: 768px) {
            .card-img-top {
                max-height: 250px;
            }
        }

        .over-bg {
            background: rgba(53, 53, 53, 0.85);
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
            backdrop-filter: blur(0.0px);
            -webkit-backdrop-filter: blur(0.0px);
            border-radius: 10px;
        }

        .btn {
            font-size: 1rem;
            font-weight: 500;
            text-transform: uppercase;
            padding: 5px 50px 5px 50px;
        }

        .box .btn {
            font-size: 1.5rem;
        }

        @media (max-width: 1025px) {
            .btn {
                padding: 5px 40px 5px 40px;
            }
        }

        @media (max-width: 250px) {
            .btn {
                padding: 5px 30px 5px 30px;
            }
        }

        .btn-warning {
            background: none #f7810a;
            color: #ffffff;
            fill: #ffffff;
            border: none;
            text-decoration: none;
            outline: 0;
            box-shadow: -1px 6px 19px rgba(247, 129, 10, 0.25);
            border-radius: 100px;
        }

        .btn-warning:hover {
            background: none #ff962b;
            color: #ffffff;
            box-shadow: -1px 6px 13px rgba(255, 150, 43, 0.35);
        }

        .bg-success {
            font-size: 1rem;
            background-color: #28a745 !important;
        }

        .bg-danger {
            font-size: 1rem;
        }

        .price-hp {
            font-size: 1rem;
            font-weight: 600;
            color: darkgray;
        }

        .amz-hp {
            font-size: .7rem;
            font-weight: 600;
            color: darkgray;
        }

        .fa-question-circle:before {
            color: darkgray;
        }

        .fa-plus:before {
            color: darkgray;
        }

        .box {
            border-radius: 1rem;
            background: #fff;
            box-shadow: 0 6px 10px rgb(0 0 0 / 8%), 0 0 6px rgb(0 0 0 / 5%);
            transition: .3s transform cubic-bezier(.155, 1.105, .295, 1.12), .3s box-shadow, .3s -webkit-transform cubic-bezier(.155, 1.105, .295, 1.12);
        }
        .float-end {
            float: right !important;
        }
        .rounded-pill {
            border-radius: 50rem !important;
        }


        .float-start {
            float: left !important;
            font-size: 16px; /* Choisissez la taille de texte souhaitée */
        }

        @media (max-width: 576px) {
            .box-img {
                max-width: 200px;
            }

            .thumb-sec {
                max-width: 200px;
            }
        }

        .inner-gallery {
            width: 60px;
            height: 60px;
            border: 1px solid #ddd;
            border-radius: 3px;
            margin: 1px;
            display: inline-block;
            overflow: hidden;
            -o-object-fit: cover;
            object-fit: cover;
        }

        @media (max-width: 370px) {
            .box .btn {
                padding: 5px 40px 5px 40px;
                font-size: 1rem;
            }
        }

        .disclaimer {
            font-size: .9rem;
            color: darkgray;
        }

        .related h3 {
            font-weight: 900;
        }

        footer {
            background: #212529;
            height: 80px;
            color: #fff;
        }

    </style>

    <!-- Script pour filtrer le tableau par intervalle de prix -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const minPriceSlider = document.getElementById('minPrice');
            const maxPriceSlider = document.getElementById('maxPrice');
            const minPriceValue = document.getElementById('minPriceValue');
            const maxPriceValue = document.getElementById('maxPriceValue');

            // Mettez à jour les valeurs de prix initial lors du changement de slider
            minPriceSlider.addEventListener('input', function () {
                minPriceValue.textContent = this.value;
                filterTableByPrice();
            });

            maxPriceSlider.addEventListener('input', function () {
                maxPriceValue.textContent = this.value;
                filterTableByPrice();
            });

            // Fonction pour filtrer le tableau par intervalle de prix
            function filterTableByPrice() {
                const minPrice = parseInt(minPriceSlider.value);
                const maxPrice = parseInt(maxPriceSlider.value);
                const rows = document.querySelectorAll('.tbl-content table tbody tr');

                rows.forEach(row => {
                    const priceCell = parseInt(row.querySelector('td:nth-child(3)').textContent); // Supposant que le prix est dans la troisième colonne
                    if (priceCell >= minPrice && priceCell <= maxPrice) {
                        row.style.display = 'table-row'; // Affichez la ligne si le prix est dans l'intervalle sélectionné
                    } else {
                        row.style.display = 'none'; // Sinon, masquez la ligne
                    }
                });
            }
        });
    </script>
    <style>

        /* Custom CSS */
        .btn-custom {
            background-color: #c2fbd7;
            border-radius: 100px;
            box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset, rgba(44, 187, 99, .15) 0 1px 2px, rgba(44, 187, 99, .15) 0 2px 4px, rgba(44, 187, 99, .15) 0 4px 8px, rgba(44, 187, 99, .15) 0 8px 16px, rgba(44, 187, 99, .15) 0 16px 32px;
            color: green;
            cursor: pointer;
            display: inline-block;
            font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;
            padding: 7px 20px;
            text-align: center;
            text-decoration: none;
            transition: all 250ms;
            border: 0;
            font-size: 16px;
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
        }


        .btn-custom:hover {
            box-shadow: rgba(44, 187, 99, .35) 0 -25px 18px -14px inset, rgba(44, 187, 99, .25) 0 1px 2px, rgba(44, 187, 99, .25) 0 2px 4px, rgba(44, 187, 99, .25) 0 4px 8px, rgba(44, 187, 99, .25) 0 8px 16px, rgba(44, 187, 99, .25) 0 16px 32px;
            transform: scale(1.05) rotate(-1deg);
        }


        .container3 {

            justify-content: center; /* Centrer horizontalement */
            align-items: center; /* Centrer verticalement */
            height: auto; /* Assurez-vous que le conteneur parent occupe toute la hauteur de la fenêtre */

        }

        .container2 {
            justify-content: center; /* Centrer horizontalement */
            align-items: center; /* Centrer verticalement */
            height: auto; /* Assurez-vous que le conteneur parent occupe toute la hauteur de la fenêtre */
            margin: 12px; /* Espacement autour du conteneur */
        }

        .card2 {
margin-left: 120px;
            justify-content: center; /* Centrer horizontalement */
            align-items: center; /* Centrer verticalement */
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            width: 1300px;
            background: #fff;
            box-shadow: 0 6px 10px rgba(0, 0, 0, .08), 0 0 6px rgba(0, 0, 0, .05);
        }



        ::-webkit-scrollbar {
            width: 6px;
        }

        ::-webkit-scrollbar-track {
            -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        }

        ::-webkit-scrollbar-thumb {
            -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        }

        .legend-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .color-indicator {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .legend-text {
            font-size: 16px;
        }

    </style>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sortButtons = document.querySelectorAll('.sort-btn');

            sortButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const column = parseInt(this.getAttribute('data-col'));
                    const order = this.getAttribute('data-order');

                    // Mettre à jour le sens du tri
                    const newOrder = order === 'asc' ? 'desc' : 'asc';
                    this.setAttribute('data-order', newOrder);

                    // Modifier le texte du bouton pour refléter le sens du tri
                    const arrow = newOrder === 'asc' ? '▲' : '▼';
                    this.textContent = this.textContent.replace(/[▲▼]/g, '') + arrow;

                    // Trier le tableau en fonction de la colonne et du sens du tri
                    sortTable(column, newOrder);
                });
            });

            function sortTable(column, order) {
                const table = document.querySelector('.tbl-content table');
                const rows = Array.from(table.querySelectorAll('tbody tr'));

                rows.sort((rowA, rowB) => {
                    const cellA = rowA.querySelectorAll('td')[column - 1].textContent;
                    const cellB = rowB.querySelectorAll('td')[column - 1].textContent;

                    if (order === 'asc') {
                        return cellA.localeCompare(cellB);
                    } else {
                        return cellB.localeCompare(cellA);
                    }
                });

                // Réorganiser les lignes dans le tableau selon le nouveau tri
                const tbody = table.querySelector('tbody');
                tbody.innerHTML = '';
                rows.forEach(row => tbody.appendChild(row));
            }
        });
    </script>
    <script>
        // Activer Tempus Dominus sur le champ de date
        $(function () {
            $('#your_datepicker_id').datetimepicker({
                format: 'YYYY-MM-DD', // Format de date uniquement
                // Autres options de configuration si nécessaire
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const minPriceSlider = document.getElementById('minPrice');
            const maxPriceSlider = document.getElementById('maxPrice');
            const minPriceValue = document.getElementById('minPriceValue');
            const maxPriceValue = document.getElementById('maxPriceValue');
            const cards = document.querySelectorAll('.container-fluid .row .card');

            minPriceSlider.addEventListener('input', function() {
                minPriceValue.textContent = this.value;
                filterCoverByPrice();
            });

            maxPriceSlider.addEventListener('input', function() {
                maxPriceValue.textContent = this.value;
                filterCoverByPrice();
            });

            function filterCoverByPrice() {
                const minPrice = parseInt(minPriceSlider.value);
                const maxPrice = parseInt(maxPriceSlider.value);

                cards.forEach(card => {
                    const priceElement = card.querySelector('.price'); // Sélectionnez l'élément contenant le montant
                    const price = parseInt(priceElement.textContent); // Obtenez le montant en tant que nombre

                    if (price >= minPrice && price <= maxPrice) {
                        card.style.display = 'block'; // Affichez la carte si le montant est dans l'intervalle sélectionné
                    } else {
                        card.style.display = 'none'; // Sinon, masquez la carte
                    }
                });
            }

            filterCoverByPrice(); // Filtrer initialement les éléments en fonction des valeurs initiales des curseurs
        });
    </script>
{% endblock %}

